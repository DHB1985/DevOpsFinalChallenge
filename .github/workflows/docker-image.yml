name: Docker Image CI

env:
  REGISTRY: danielhbarbieri
  IMAGE_NAME_NODE: helloNode
  IMAGE_NAME_GOLANG: helloGolang

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-docker:
    runs-on: ubuntu-20.04
    # needs:
    #   - init
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./hello-world-nodejs
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NODE }}:latest

  # build-dockerCompose:
  #   runs-on: ubuntu-20.04
  #   # needs:
  #   #   - init
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up DockerCompose
  #       uses: isbang/compose-action@v1.2.0
  #       with:
  #         compose-file: "./deploy/docker-compose.yml"
  #         services: |
  #           hello-node
  #           hello-golang
  #           hello-nginx

  # init:

  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         push: true
  #         tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
  #     - name: Set up DockerCompose
  #       uses: isbang/compose-action@v1.2.0
  #       with:
  #         compose-file: "./deploy/docker-compose.yml"
  #         services: |
  #           hello-node
  #           hello-golang
  #           hello-nginx

    # strategy:
    #   matrix:
    #     node-version: [14.x]

    # # steps:
    # # - uses: actions/checkout@v3
    # # - name: Use Node.js ${{ matrix.node-version }}
    # #   uses: actions/setup-node@v3
    # #   with:
    # #     node-version: ${{ matrix.node-version }}
    # #     cache: 'npm'
    # # - run: npm install

    # strategy:


  
  # deploy-heroku:
  #   runs-on: ubuntu-20.04
  #   # needs: build-dockerCompose
  #   needs: init
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: "devopsfinalchallenge" #Must be unique in Heroku
  #         heroku_email: "danielbarbieri@gmail.com"
  #         usedocker: true
